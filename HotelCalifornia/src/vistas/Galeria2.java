/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vistas;

import accesoADatos.HabitacionData;
import entidades.Habitacion;
import java.awt.Image;
import java.util.ArrayList;
import java.util.HashMap;
import javax.swing.ImageIcon;

/**
 *
 * @author SANTIAGONB
 */
public class Galeria2 extends javax.swing.JInternalFrame {

    /**
     * Creates new form Galeria2
     */
    private HashMap<Integer, ImageIcon> imagenes;
    private HashMap<Integer, Integer> nHabitaciones;
    private int imgSeleccionada;
    private HabitacionData habData;

    public Galeria2() {
        initComponents();
        armarGaleria();
        seleccionarImagen(1);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jlImagen = new javax.swing.JLabel();
        jlHabitacionN = new javax.swing.JLabel();
        jbSiguiente = new javax.swing.JButton();
        jbAnterior = new javax.swing.JButton();
        jbSalir = new javax.swing.JButton();
        jlNimagen = new javax.swing.JLabel();

        jlHabitacionN.setText("Habitacion N°");

        jbSiguiente.setText("Siguiente");
        jbSiguiente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSiguienteActionPerformed(evt);
            }
        });

        jbAnterior.setText("Anterior");
        jbAnterior.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAnteriorActionPerformed(evt);
            }
        });

        jbSalir.setText("Salir");
        jbSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSalirActionPerformed(evt);
            }
        });

        jlNimagen.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlNimagen.setText("N/N");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jbAnterior)
                .addGap(7, 7, 7)
                .addComponent(jlNimagen, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jlHabitacionN, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbSiguiente)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jbSalir)
                .addGap(17, 17, 17))
            .addComponent(jlImagen, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 538, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jlImagen, javax.swing.GroupLayout.PREFERRED_SIZE, 352, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlHabitacionN, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jbSiguiente)
                    .addComponent(jbAnterior)
                    .addComponent(jbSalir)
                    .addComponent(jlNimagen, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSalirActionPerformed
        dispose();
    }//GEN-LAST:event_jbSalirActionPerformed

    private void jbAnteriorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAnteriorActionPerformed
        retrocederImagen();
    }//GEN-LAST:event_jbAnteriorActionPerformed

    private void jbSiguienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSiguienteActionPerformed
        avanzarImagen();
    }//GEN-LAST:event_jbSiguienteActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jbAnterior;
    private javax.swing.JButton jbSalir;
    private javax.swing.JButton jbSiguiente;
    private javax.swing.JLabel jlHabitacionN;
    private javax.swing.JLabel jlImagen;
    private javax.swing.JLabel jlNimagen;
    // End of variables declaration//GEN-END:variables

    private void armarGaleria() {
        habData = new HabitacionData();
        imagenes = new HashMap<>();
        nHabitaciones = new HashMap<>();

        ImageIcon imagen;
        int id;
        int contador = 0;
        for (Habitacion habitacion : habData.listarHabitacionesTodas()) {
            contador++;
            id = habitacion.getIdHabitacion();
            imagen = habitacion.getImagen().getImagen();
            int bImagen = imagen.getIconWidth();
            int hImagen = imagen.getIconHeight();
            int bLabel = 538;
            double rel = (double) bLabel / (double) bImagen;
            int hEscalado = (int) (hImagen * rel);
            ImageIcon imagenEscalada = new ImageIcon(imagen.getImage().getScaledInstance(bLabel, hEscalado, Image.SCALE_SMOOTH));
            imagenes.put(id, imagenEscalada);
            nHabitaciones.put(contador, id);
        }
    }

    private void seleccionarImagen(int nOrden) {
        imgSeleccionada = nOrden;
        int size = nHabitaciones.size();
        int nHabitacion = nHabitaciones.get(nOrden);
        ImageIcon imagen = imagenes.get(nHabitacion);
        jlImagen.setIcon(imagen);
        jlNimagen.setText(nOrden + "/" + size);
        jlHabitacionN.setText("Habitación N°: " + nHabitacion);
    }

    private void avanzarImagen() {
        int size = nHabitaciones.size();
        if (imgSeleccionada == size) {
            imgSeleccionada = 1;
        } else {
            imgSeleccionada++;
        }
        seleccionarImagen(imgSeleccionada);

    }

    private void retrocederImagen() {
        int size = nHabitaciones.size();
        if (imgSeleccionada == 1) {
            imgSeleccionada = size;
        } else {
            imgSeleccionada--;
        }
        seleccionarImagen(imgSeleccionada);
    }
}
