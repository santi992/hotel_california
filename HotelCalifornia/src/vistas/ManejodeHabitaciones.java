/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package vistas;

import accesoADatos.HabitacionData;
import accesoADatos.ImagenData;
import accesoADatos.TipoHabData;
import entidades.Habitacion;
import entidades.Imagen;
import entidades.TipoHabitacion;
import static hotelcalifornia.HotelCalifornia.obtenerId;
import java.awt.Image;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.util.List;
import java.util.TreeSet;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author Usuario
 */
public class ManejodeHabitaciones extends javax.swing.JInternalFrame {

    /**
     * Creates new form ManejodeHabitaciones
     */
    private Imagen imagenHab;

    public ManejodeHabitaciones() {
        initComponents();
        armarComboBox();
        armarComboPiso();
        jtDispo.setVisible(false);
        imagenHab = null;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jtIdHab = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jcbTipoHabitacion = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jcbPiso = new javax.swing.JComboBox<>();
        jrbReservado = new javax.swing.JRadioButton();
        jrbEstado = new javax.swing.JRadioButton();
        jbAgregar = new javax.swing.JButton();
        jbModificar = new javax.swing.JButton();
        jbEliminar = new javax.swing.JButton();
        jbSalir = new javax.swing.JButton();
        jbBuscar = new javax.swing.JButton();
        jtDispo = new javax.swing.JLabel();
        jtImagen = new javax.swing.JTextField();
        jbImagen = new javax.swing.JButton();
        jlImagen = new javax.swing.JLabel();

        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/hc_logo.png"))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel1.setText("Manejo de Habitaciones");

        jLabel2.setText("Nro Habitacion");

        jLabel3.setText("Tipo de Habitacion: ");

        jcbTipoHabitacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbTipoHabitacionActionPerformed(evt);
            }
        });

        jLabel4.setText("Piso: ");

        jcbPiso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbPisoActionPerformed(evt);
            }
        });

        jrbReservado.setText("Reservado");

        jrbEstado.setText("Estado");

        jbAgregar.setText("Agregar");
        jbAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAgregarActionPerformed(evt);
            }
        });

        jbModificar.setText("Modificar");
        jbModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbModificarActionPerformed(evt);
            }
        });

        jbEliminar.setText("Eliminar");
        jbEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbEliminarActionPerformed(evt);
            }
        });

        jbSalir.setText("Salir");
        jbSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSalirActionPerformed(evt);
            }
        });

        jbBuscar.setText("Buscar");
        jbBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBuscarActionPerformed(evt);
            }
        });

        jtDispo.setText("Inactiva");

        jtImagen.setText("....");

        jbImagen.setText("Seleccionar");
        jbImagen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbImagenActionPerformed(evt);
            }
        });

        jlImagen.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlImagen.setText("Imagen no disponible");
        jlImagen.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jlImagen.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(34, Short.MAX_VALUE)
                        .addComponent(jbAgregar)
                        .addGap(18, 18, 18)
                        .addComponent(jbModificar)
                        .addGap(18, 18, 18)
                        .addComponent(jbEliminar)
                        .addGap(18, 18, 18)
                        .addComponent(jbSalir))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jtImagen)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jbImagen))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jcbTipoHabitacion, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(71, 71, 71)
                                        .addComponent(jrbReservado)
                                        .addGap(75, 75, 75)
                                        .addComponent(jrbEstado))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel2)
                                                .addGap(18, 18, 18)
                                                .addComponent(jtIdHab, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(83, 83, 83)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(jbBuscar)
                                                    .addComponent(jLabel1))))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jtDispo))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(12, 12, 12)
                                                .addComponent(jlImagen, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(91, 91, 91)
                                                .addComponent(jcbPiso, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addGap(18, 18, 18))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jtIdHab, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbBuscar)
                    .addComponent(jtDispo))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jcbTipoHabitacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jcbPiso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jlImagen, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtImagen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbImagen))
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jrbReservado)
                    .addComponent(jrbEstado))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbAgregar)
                    .addComponent(jbModificar)
                    .addComponent(jbEliminar)
                    .addComponent(jbSalir))
                .addGap(12, 12, 12))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBuscarActionPerformed
        try {

            HabitacionData hd = new HabitacionData();
            Habitacion hab = hd.obtenerHabitacion(Integer.parseInt(jtIdHab.getText()));
            if (hab != null) {

                if (hab.isEstado()) {
                    jtDispo.setVisible(false);
                } else {
                    jtDispo.setVisible(true);
                }
                jtIdHab.setText(String.valueOf(hab.getIdHabitacion()));
                jcbTipoHabitacion.setSelectedItem(hab.getTipoHabitacion().toString1());
                jcbPiso.setSelectedItem(hab.getPiso());
                jrbReservado.setSelected(hab.isReserva());
                jrbEstado.setSelected(hab.isEstado());
                imagenHab = hab.getImagen();
                ImageIcon imagenEscalada = new ImageIcon(imagenHab.getImagen().getImage().getScaledInstance(260, 160, Image.SCALE_SMOOTH));
                jlImagen.setIcon(imagenEscalada);
                jlImagen.setText("");
                jtImagen.setText(imagenHab.getRuta());

            }

        } catch (NumberFormatException nf) {
            JOptionPane.showMessageDialog(null, "El código ingresado debe ser un número");
        }

    }//GEN-LAST:event_jbBuscarActionPerformed

    private void jcbTipoHabitacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbTipoHabitacionActionPerformed

    }

    private void armarComboBox() {

        TipoHabData hd = new TipoHabData();
        List tipoHabitacion = hd.listarTipos();

        for (Object h : tipoHabitacion) {
            TipoHabitacion habs = (TipoHabitacion) h;
            jcbTipoHabitacion.addItem(habs.toString1());
        }
        jcbTipoHabitacion.setSelectedIndex(-1);
    }//GEN-LAST:event_jcbTipoHabitacionActionPerformed

    private void jcbPisoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbPisoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jcbPisoActionPerformed

    private void jbAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAgregarActionPerformed

        HabitacionData habd = new HabitacionData();
        String hab = (String) jcbTipoHabitacion.getSelectedItem();

        Habitacion habit = new Habitacion();
        int id = Integer.parseInt(jtIdHab.getText());
        habit.setIdHabitacion(id);
        TipoHabitacion th = new TipoHabData().obtenerTipoxId(obtenerId(hab));
        habit.setTipoHabitacion(th);
        habit.setPiso((int) jcbPiso.getSelectedItem());
        habit.setReserva(jrbReservado.isSelected());
        habit.setEstado(jrbEstado.isSelected());
        habit.setImagen(imagenHab);
        habd.agregarHabitacion(habit);

        ImagenData imagenData = new ImagenData();
        imagenData.agregarImagen(imagenHab);

    }//GEN-LAST:event_jbAgregarActionPerformed

    private void jbEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbEliminarActionPerformed
        HabitacionData habd = new HabitacionData();

        Habitacion habit = new Habitacion();
        int id = Integer.parseInt(jtIdHab.getText());
        habit.getIdHabitacion();
        habit.getTipoHabitacion();
        habit.getPiso();
        habit.isReserva();
        habit.isEstado();
        habd.eliminarHabitacion(id);

    }//GEN-LAST:event_jbEliminarActionPerformed


    private void jbSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSalirActionPerformed
        this.dispose();
    }//GEN-LAST:event_jbSalirActionPerformed

    private void jbModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbModificarActionPerformed
        HabitacionData habd = new HabitacionData();

        Habitacion habit = new Habitacion();
        int id = Integer.parseInt(jtIdHab.getText());
        habit.setIdHabitacion(id);
        TipoHabitacion th = new TipoHabData().obtenerTipoxId(obtenerId((String) jcbTipoHabitacion.getSelectedItem()));
        habit.setTipoHabitacion(th);
        habit.setPiso((int) jcbPiso.getSelectedItem());
        habit.setReserva(jrbReservado.isSelected());
        habit.setEstado(jrbEstado.isSelected());
        habit.setImagen(imagenHab);
        habd.modificarHabitacion(habit);


    }//GEN-LAST:event_jbModificarActionPerformed

    private void jbImagenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbImagenActionPerformed
        seleccionarImagen();
    }//GEN-LAST:event_jbImagenActionPerformed

    private void armarComboPiso() {
        HabitacionData habData = new HabitacionData();
        List habitaciones = habData.listarHabitacionesTodas();
        TreeSet<Integer> pisos = new TreeSet<>();
        for (Object hab : habitaciones) {
            Habitacion habitacion = (Habitacion) hab;
            int piso = habitacion.getPiso();
            pisos.add(piso);
        }
        for (int piso : pisos) {
            jcbPiso.addItem(piso);
        }
        jcbPiso.setSelectedIndex(-1);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JButton jbAgregar;
    private javax.swing.JButton jbBuscar;
    private javax.swing.JButton jbEliminar;
    private javax.swing.JButton jbImagen;
    private javax.swing.JButton jbModificar;
    private javax.swing.JButton jbSalir;
    private javax.swing.JComboBox<Integer> jcbPiso;
    private javax.swing.JComboBox<String> jcbTipoHabitacion;
    private javax.swing.JLabel jlImagen;
    private javax.swing.JRadioButton jrbEstado;
    private javax.swing.JRadioButton jrbReservado;
    private javax.swing.JLabel jtDispo;
    private javax.swing.JTextField jtIdHab;
    private javax.swing.JTextField jtImagen;
    // End of variables declaration//GEN-END:variables

    private void seleccionarImagen() {

        String ruta = "";
        String rutaDestino = "src\\imagenes\\habitaciones\\";

        JFileChooser selector = new JFileChooser();
        FileNameExtensionFilter filtro = new FileNameExtensionFilter("JPG, JPEG & PNG", "jpg", "jpeg", "png");
        selector.setFileFilter(filtro);

        int respuesta = selector.showOpenDialog(selector);

        if (respuesta == JFileChooser.APPROVE_OPTION) {
            ruta = selector.getSelectedFile().getPath();
            String nombreArchivo = selector.getSelectedFile().getName();
            rutaDestino = rutaDestino + nombreArchivo;
            File origen = new File(ruta);

            File destino = new File(rutaDestino);

            try {
                InputStream in = new FileInputStream(origen);
                OutputStream out = new FileOutputStream(destino);

                byte[] buf = new byte[1024];
                int len;

                while ((len = in.read(buf)) > 0) {
                    out.write(buf, 0, len);
                }

                in.close();
                out.close();

                imagenHab = new Imagen();
                String rutaImagen = "/imagenes/habitaciones/" + nombreArchivo;
                System.out.println(nombreArchivo);

                jlImagen.setIcon(null);
                jlImagen.setText("Cargando Imagen...");

                actualizarImagen(rutaImagen);

            } catch (IOException ioe) {
                ioe.printStackTrace();
            }

        }

    }

    private void actualizarImagen(String rutaImagen) {

        (new Thread() {
            @Override
            public void run() {

                try {
                    Thread.sleep(10);
                    while (jlImagen.getIcon() == null) {
                        try {
                            ImageIcon imagen = new ImageIcon(getClass().getResource(rutaImagen));
                            imagenHab.setImagen(imagen);
                            imagenHab.setRuta(rutaImagen);
                            ImageIcon imagenEscalada = new ImageIcon(imagenHab.getImagen().getImage().getScaledInstance(260, 160, Image.SCALE_SMOOTH));
                            jlImagen.setIcon(imagenEscalada);
                            jlImagen.setText("");
                            jtImagen.setText(rutaImagen);
                            
                            ImagenData imgData = new ImagenData();
                            imgData.agregarImagen(imagenHab);

                        } catch (NullPointerException np) {

                        }

                    }
                    
                } catch (InterruptedException ex) {
                    JOptionPane.showMessageDialog(null, "Error de interrupcion");
                }

            }

        }).start();

    }

}
