/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vistas;

import accesoADatos.HabitacionData;
import accesoADatos.HuespedData;
import accesoADatos.ReservaData;
import entidades.Huesped;
import entidades.Reserva;
import static hotelcalifornia.HotelCalifornia.espera;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.time.LocalDate;
import static java.time.temporal.ChronoUnit.DAYS;
import java.util.List;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import static vistas.ReservarHabitacion.elegir;
import static vistas.ReservarHabitacion.fechaOut;
import static vistas.ReservarHabitacion.fechaTope;
import static vistas.ReservarHabitacion.habitacionActiva;
import static vistas.VistaPrincipal.huespedActivo;
import static vistas.VistaPrincipal.login;
import static vistas.VistaPrincipal.personal;

/**
 *
 * @author SANTIAGONB
 */
public class AmpliarReserva extends javax.swing.JInternalFrame {

    private HuespedData huData;
    private ReservaData resData;
    private HabitacionData habData;
    private LocalDate fechaIn;
    private int noches;
    private double diferencia;
    private double diferenciaInicial;
    private double precio;
    private double precioActual;
    private double precioFinal;
    private List<LocalDate> fechasReservadas;

    public AmpliarReserva() {

        huData = new HuespedData();
        resData = new ReservaData();

        initComponents();

        armarComboHuesped();
        armarComboReservas();
        datosReserva();
        calcularPrecio();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBox1 = new javax.swing.JComboBox<>();
        jlTitulo = new javax.swing.JLabel();
        jlReserva = new javax.swing.JLabel();
        jlHuesped = new javax.swing.JLabel();
        jcbHuesped = new javax.swing.JComboBox<>();
        jlNoches = new javax.swing.JLabel();
        jlPrecioActual = new javax.swing.JLabel();
        jlPrecioNuevo = new javax.swing.JLabel();
        jlDiferencia = new javax.swing.JLabel();
        jlHabitacion = new javax.swing.JLabel();
        jbConfirmar = new javax.swing.JButton();
        jbSalir = new javax.swing.JButton();
        jlPrecioXNoche = new javax.swing.JLabel();
        jcbReserva = new javax.swing.JComboBox<>();
        jlBuscar = new javax.swing.JLabel();
        jtHuesped = new javax.swing.JTextField();
        jlPersonas = new javax.swing.JLabel();
        jlFechaDesde = new javax.swing.JLabel();
        jlMostrarFechaIn = new javax.swing.JLabel();
        jbElegirOut = new javax.swing.JButton();
        jlMostrarFechaOut = new javax.swing.JLabel();
        jlFechaOut = new javax.swing.JLabel();

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        setTitle("Ampliar reserva");
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/hc_logo.png"))); // NOI18N

        jlTitulo.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jlTitulo.setText("Ampliar reserva");

        jlReserva.setText("Reserva N°:");

        jlHuesped.setText("Huesped:");

        jcbHuesped.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbHuespedActionPerformed(evt);
            }
        });

        jlNoches.setText("Noches:");

        jlPrecioActual.setText("Precio actual:");

        jlPrecioNuevo.setText("Nuevo precio:");

        jlDiferencia.setText("Diferencia a abonar:");

        jlHabitacion.setText("Habitación N°:");

        jbConfirmar.setText("Ampliar reserva");
        jbConfirmar.setPreferredSize(new java.awt.Dimension(100, 30));
        jbConfirmar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbConfirmarActionPerformed(evt);
            }
        });

        jbSalir.setText("Salir");
        jbSalir.setPreferredSize(new java.awt.Dimension(100, 30));
        jbSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSalirActionPerformed(evt);
            }
        });

        jlPrecioXNoche.setText("Precio por noche:");

        jcbReserva.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbReservaActionPerformed(evt);
            }
        });

        jlBuscar.setText("Buscar huesped por dni o nombre");

        jtHuesped.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtHuespedActionPerformed(evt);
            }
        });
        jtHuesped.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtHuespedKeyReleased(evt);
            }
        });

        jlPersonas.setText("Cantidad de Personas:");

        jlFechaDesde.setText("Desde:");

        jlMostrarFechaIn.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlMostrarFechaIn.setText("----");
        jlMostrarFechaIn.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jlMostrarFechaInPropertyChange(evt);
            }
        });

        jbElegirOut.setText("Elegir");
        jbElegirOut.setPreferredSize(new java.awt.Dimension(70, 32));
        jbElegirOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbElegirOutActionPerformed(evt);
            }
        });

        jlMostrarFechaOut.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlMostrarFechaOut.setText("----");
        jlMostrarFechaOut.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jlMostrarFechaOutPropertyChange(evt);
            }
        });

        jlFechaOut.setText("Hasta:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jlHabitacion, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jlPersonas, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jlFechaDesde, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jlMostrarFechaIn, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jlPrecioActual, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jlNoches, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jlDiferencia, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jlFechaOut, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jlMostrarFechaOut, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jbElegirOut, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jlPrecioNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jlPrecioXNoche, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jbConfirmar, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jbSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(176, 176, 176)
                        .addComponent(jlTitulo))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jlHuesped)
                            .addComponent(jlBuscar)
                            .addComponent(jlReserva)
                            .addComponent(jtHuesped)
                            .addComponent(jcbReserva, 0, 413, Short.MAX_VALUE)
                            .addComponent(jcbHuesped, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(22, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jlTitulo)
                .addGap(12, 12, 12)
                .addComponent(jlHuesped)
                .addGap(7, 7, 7)
                .addComponent(jcbHuesped, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jlBuscar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtHuesped, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jlReserva)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jcbReserva, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlHabitacion)
                    .addComponent(jlPersonas))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jlMostrarFechaIn, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbElegirOut, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlFechaDesde)
                    .addComponent(jlMostrarFechaOut, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlFechaOut))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlNoches, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlPrecioXNoche, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlPrecioActual, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlPrecioNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlDiferencia, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbConfirmar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbSalir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSalirActionPerformed
        dispose();
    }//GEN-LAST:event_jbSalirActionPerformed

    private void jtHuespedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtHuespedActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtHuespedActionPerformed

    private void jtHuespedKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtHuespedKeyReleased
        armarComboHuesped();
    }//GEN-LAST:event_jtHuespedKeyReleased

    private void jcbHuespedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbHuespedActionPerformed
        armarComboReservas();
    }//GEN-LAST:event_jcbHuespedActionPerformed

    private void jcbReservaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbReservaActionPerformed
        datosReserva();
        calcularPrecio();
    }//GEN-LAST:event_jcbReservaActionPerformed

    private void jbConfirmarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbConfirmarActionPerformed
        if (diferencia > 0) {

            String mensaje = "¿Confirma que desea ampliar su\nreserva hasta la fecha "
                    + fechaOut + "?\nDeberá abonar $" + diferencia + " USD";

            Object[] opciones = new Object[]{"Confirmar", "Cancelar"};

            int respuesta = JOptionPane.showOptionDialog(null, mensaje, "Ampliar reserva", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, opciones, opciones[0]);

            if (respuesta == JOptionPane.YES_OPTION) {
                confirmar();
            }
        } else {
            JOptionPane.showMessageDialog(null, "La nueva fecha de check out\ndebe ser posterior a " + fechaOut);
        }
    }//GEN-LAST:event_jbConfirmarActionPerformed

    private void jlMostrarFechaInPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jlMostrarFechaInPropertyChange
        calcularPrecio();
    }//GEN-LAST:event_jlMostrarFechaInPropertyChange

    private void jbElegirOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbElegirOutActionPerformed
        elegir(false, fechaIn);
    }//GEN-LAST:event_jbElegirOutActionPerformed

    private void jlMostrarFechaOutPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jlMostrarFechaOutPropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_jlMostrarFechaOutPropertyChange

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JButton jbConfirmar;
    private javax.swing.JButton jbElegirOut;
    private javax.swing.JButton jbSalir;
    private javax.swing.JComboBox<Huesped> jcbHuesped;
    private javax.swing.JComboBox<Reserva> jcbReserva;
    private javax.swing.JLabel jlBuscar;
    private javax.swing.JLabel jlDiferencia;
    private javax.swing.JLabel jlFechaDesde;
    private javax.swing.JLabel jlFechaOut;
    private javax.swing.JLabel jlHabitacion;
    private javax.swing.JLabel jlHuesped;
    public static javax.swing.JLabel jlMostrarFechaIn;
    public static javax.swing.JLabel jlMostrarFechaOut;
    private javax.swing.JLabel jlNoches;
    private javax.swing.JLabel jlPersonas;
    private javax.swing.JLabel jlPrecioActual;
    private javax.swing.JLabel jlPrecioNuevo;
    private javax.swing.JLabel jlPrecioXNoche;
    private javax.swing.JLabel jlReserva;
    private javax.swing.JLabel jlTitulo;
    private javax.swing.JTextField jtHuesped;
    // End of variables declaration//GEN-END:variables

    private void comboHuespedes() {
        List huespedes = huData.listarHuespedes();
        for (Object hu : huespedes) {
            Huesped huesped = (Huesped) hu;
            jcbHuesped.addItem(huesped);
        }

    }

    private void buscarHuesped() {

        List huespedes = huData.listarHuespedes();

        String texto = jtHuesped.getText().toLowerCase();

        for (Object hu : huespedes) {

            Huesped huesped = (Huesped) hu;

            String nombre = huesped.getNombre().toLowerCase();
            String apellido = huesped.getApellido().toLowerCase();
            String dni = huesped.getDni() + "";
            String nomAp = nombre + " " + apellido;
            String apNom = apellido + " " + nombre;

            boolean nombreMatch = nombre.startsWith(texto);
            boolean apellidoMatch = apellido.startsWith(texto);
            boolean dniMatch = dni.startsWith(texto);
            boolean nomApMatch = nomAp.startsWith(texto);
            boolean apNomMatch = apNom.startsWith(texto);

            if (nombreMatch || apellidoMatch || dniMatch || nomApMatch || apNomMatch) {
                jcbHuesped.addItem(huesped);
            }
        }
    }

    private void armarComboHuesped() {
        jcbHuesped.removeAllItems();

        if (login) {
            if (personal) {
                if (jtHuesped.getText().isEmpty()) {
                    comboHuespedes();
                } else {
                    buscarHuesped();
                }
            } else {
                jcbHuesped.addItem(huespedActivo);
                jtHuesped.setEditable(false);
            }
        } else {
            jtHuesped.setEditable(false);
            jcbHuesped.setEnabled(false);
        }

    }

    private void armarComboReservas() {
        jcbReserva.removeAllItems();

        Huesped huesped = (Huesped) jcbHuesped.getSelectedItem();
        List reservas = resData.listarReservasXHuesped(huesped);

        for (Object res : reservas) {
            Reserva reserva = (Reserva) res;
            jcbReserva.addItem(reserva);
        }

    }

    private void datosReserva() {

        fechaTope = null;
        if (jcbReserva.getSelectedIndex() >= 0) {
            Reserva reserva = (Reserva) jcbReserva.getSelectedItem();
            habitacionActiva = reserva.getHabitacion();

            fechaIn = reserva.getFechaCheckIn();
            jlMostrarFechaIn.setText(fechaIn + "");
            fechaOut = reserva.getFechaCheckOut();
            jlMostrarFechaOut.setText(fechaOut + "");

            jlHabitacion.setText("Habitación N°: " + habitacionActiva.getIdHabitacion());
            jlPersonas.setText("Cantidad de personas: " + reserva.getCantPersonas());
            precio = habitacionActiva.getTipoHabitacion().getPrecioxNoche();
            jlPrecioXNoche.setText("Precio por noche: " + precio + " USD");
            precioActual = reserva.getPrecioTotal();
            jlPrecioActual.setText("Importe abonado: " + precioActual + " USD");

            habData = new HabitacionData();
            fechasReservadas = habData.fechasReservadas(habitacionActiva);
            for (LocalDate fechaInactiva : fechasReservadas) {
                if (fechaTope == null && fechaInactiva.isAfter(fechaOut)) {
                    fechaTope = fechaInactiva;
                    break;
                }
            }

        }

    }

    private void calcularPrecio() {
        espera(10);
        try {
            noches = (int) DAYS.between(fechaIn, fechaOut);
            jlMostrarFechaOut.setText(fechaOut+"");
            jlNoches.setText("Noches: " + noches);
            precioFinal = noches * precio;
            jlPrecioNuevo.setText("Nuevo importe: $" + precioFinal + " USD");
            diferencia = precioFinal - precioActual;
            jlDiferencia.setText("Importe a abonar: $" + diferencia + " USD");

        } catch (NullPointerException np) {

        }
    }

    private void confirmar() {
        Reserva reserva = (Reserva) jcbReserva.getSelectedItem();

        resData.extenderReserva(reserva, fechaOut, precioFinal);

        armarComboReservas();
        datosReserva();
        calcularPrecio();

    }

    private void elegir(boolean in, LocalDate fecha) {

        if (jcbReserva.getSelectedIndex() >= 0) {
            elegir = new JFrame();
            elegir.setSize(480, 400);
            elegir.setLocationRelativeTo(this);
            elegir.setUndecorated(true);
            elegir.setVisible(true);
            elegir.add(new Calendario(in, fecha));
            elegir.addWindowListener(new WindowAdapter() {

                @Override
                public void windowClosed(WindowEvent evt) {
                    calcularPrecio();

                }
            });
        } else {
            JOptionPane.showMessageDialog(null, "Debe elegir una habitación");
        }

    }

}
